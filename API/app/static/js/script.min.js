$(document).ready((function(){$("[data-bs-chart]").each((function(t,e){this.chart=new Chart($(e),$(e).data("bs-chart"))}))})),$(document).ready((function(){$("#get_bucket_dropdown, #update_bucket_dropdown, #delete_bucket_dropdown").on("click",(function(){var t=this;$.get("/get_buckets",(function(e,n){$(t).parent().children(".dropdown-menu").empty(),0==e.length&&$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">No buckets found</a>'),e.forEach((function(e){$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">'+e+"</a>")}))})).fail((function(){toastr.error("Failed to get buckets.")}))})),$("#get_bucket_dropdown_menu, #update_bucket_dropdown_menu").on("click","a",(function(){var t=this,e=$(t).text().trim();"No buckets found"!=e&&""!=e&&""!=e&&null!=e?($(t).parents(".dropdown").children(".dropdown-toggle").text($(t).text()),$.get("/get_bucket/"+e,(function(n,o){$(t).parents("form").children(".measurements").children("input").remove(),$(t).parents("form").children(".measurements").children(".dropdown").remove(),n[e].measurements.forEach((function(e){console.log($(t).parent()),console.log($(t).parent().hasClass("get-measurement")),console.log($(t).parent().hasClass("update-measurement")),$(t).parent().hasClass("get-measurement")?$(t).parents("form").children(".measurements").append('<input class="form-control" type="text" value="'+e+'" readonly>'):$(t).parent().hasClass("update-measurement")&&$(t).parents("form").children(".measurements").append('<div class="dropdown mt-1">                                <button class="btn btn-secondary btn-block dropdown-toggle measurement-dropdown-button" data-toggle="dropdown" aria-expanded="false" type="button">'+e+'</button>                                <div class="dropdown-menu measurement-dropdown-menu">                                </div>                            </div>')}))})).fail((function(t,n,o){404==t.status?toastr.error("Bucket "+e+" not found."):toastr.error("Failed to get "+e+" bucket.")}))):toastr.warning("Please select valid bucket.")})),$(".dropdown-menu.delete-bucket").on("click","a",(function(){"No buckets found"!=$(this).text()&&""!=$(this).text()&&""!=$(this).text().trim()&&null!=$(this).text()?$(this).parents(".dropdown").children(".dropdown-toggle").text($(this).text()):toastr.warning("Please select valid bucket.")})),$("#add_bucket_add, #update_bucket_add").on("click",(function(){$(this).parent().parent().append('<div class="dropdown mt-1">                <button class="btn btn-secondary btn-block dropdown-toggle measurement-dropdown-button" data-toggle="dropdown" aria-expanded="false" type="button">Dropdown </button>                <div class="dropdown-menu measurement-dropdown-menu">                </div>            </div>')})),$("#add_bucket_remove, #update_bucket_remove").on("click",(function(){$(this).parents(".measurements").children(".dropdown").last().remove()})),$(document).on("click",".measurement-dropdown-button",(function(){var t=this;$.get("/get_measurements",(function(e,n){$(t).parent().children(".dropdown-menu").empty(),0==e.length&&$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">No measurements found</a>'),e.forEach((function(e){$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">'+e+"</a>")}))})).fail((function(t,e,n){toastr.error("Failed to get measurements.")}))})),$(document).on("click",".measurement-dropdown-menu a",(function(){var t=$(this).text().trim();"No measurements found"!=t&&""!=t&&""!=t&&null!=t?$(this).parents(".dropdown").children(".dropdown-toggle").text($(this).text()):toastr.warning("Please create a measurement or select a valid one.")})),$("#add_bucket_submit").on("click",(function(){var t=$("#add_bucket_name").val().trim(),e={measurements:[]};"No buckets found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?($(this).parents("form").children(".measurements").children(".dropdown").each((function(t,n){var o=$(n).children("button").text().trim();null!=o&&null!=o&&""!=o&&"Dropdown"!=o&&e.measurements.push(o)})),0!=e.measurements.length?$.post("/add_bucket",JSON.stringify({bucket:t,bucket_data:e}),(function(e,n,o){e.search("added")>-1&&200==o.status?toastr.success("success","Bucket "+t+" added."):toastr.error("Failed to add "+t+" bucket. Measurement missmatch.")})).fail((function(){toastr.error("Failed to add "+t+" bucket.")})):toastr.warning(t+" bucket doesn't have any measurements assigned.")):toastr.warning("Bucket id not valid.")})),$("#update_bucket_submit").on("click",(function(){var t=$("#update_bucket_dropdown").text().trim(),e={measurements:[]};"No buckets found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?($(this).parents("form").children(".measurements").children(".dropdown").each((function(t,n){var o=$(n).children("button").text().trim();null!=o&&null!=o&&""!=o&&"Dropdown"!=o&&e.measurements.push(o)})),0!=e.measurements.length?$.post("/update_bucket/"+t,JSON.stringify({bucket_data:e}),(function(e,n,o){e.search("updated")>-1&&200==o.status?toastr.success("Bucket "+t+" updated."):toastr.error("Failed to update "+t+" bucket.")})).fail((function(e,n,o){404==e.status?toastr.error("Bucket "+t+" not found."):toastr.error("Failed to update "+t+" bucket.")})):toastr.warning(t+" bucket doesn't have any measurements assigned.")):toastr.warning("Bucket id not valid.")})),$("#delete_bucket_submit").on("click",(function(){var t=$("#delete_bucket_dropdown").text().trim();"No buckets found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?$.ajax({url:"/delete_bucket/"+t,type:"DELETE"}).done((function(e,n,o){e.search("deleted")>-1&&200==o.status?toastr.success("Bucket "+t+" deleted."):toastr.error("Failed to delete "+t+" bucket.")})).fail((function(e,n,o){404==e.status?toastr.error("Bucket "+t+" not found."):toastr.error("Failed to delete "+t+" bucket.")})):toastr.warning("Bucket id not valid.")}))})),$(document).ready((function(){$("#get_measurement_dropdown, #update_measurement_dropdown, #delete_measurement_dropdown, #subscribe_measurement_dropdown_button, #show_subscription_dropdown_button, #pr_measurement_dropdown, #delete_measurement_dropdown").on("click",(function(){var t=this;$.get("/get_measurements",(function(e,n){$(t).parent().children(".dropdown-menu").empty(),0==e.length&&$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">No measurements found</a>'),e.forEach((function(e){$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">'+e+"</a>")}))}))})),$("#get_measurement_dropdown_menu").on("click","a",(function(){var t=this,e=$(t).text().trim();"No measurements found"!=e&&""!=e&&""!=e&&null!=e?($(t).parents(".dropdown").children(".dropdown-toggle").text($(t).text()),$.get("/get_measurement/"+e,(function(n,o){$(t).parents("form").find(".entities-table").find("tbody").empty(),n[e].subscription_data.entities.forEach((function(e){$(t).parents("form").find(".entities-table").find("tbody").append("<tr>                            <td>"+e.id+"</td>                            <td>"+e.id_type+"</td>                            <td>"+e.type+"</td>                            <td>"+e.type_type+"</td>                        </tr>")})),$(t).parents("form").find(".tags-table").find("tbody").empty();for(const[o,r]of Object.entries(n[e].influx_data.tags))$(t).parents("form").find(".tags-table").find("tbody").append("<tr>                        <td>"+o+"</td>                        <td>"+r+"</td>                    </tr>");$(t).parents("form").find(".fields-table").find("tbody").empty();for(const[o,r]of Object.entries(n[e].influx_data.fields))$(t).parents("form").find(".fields-table").find("tbody").append("<tr>                        <td>"+o+"</td>                        <td>"+r+"</td>                    </tr>")}))):toastr.warning("Please select valid measurement.")})),$("#update_measurement_dropdown_menu").on("click","a",(function(){var t=this,e=$(t).text().trim();"No measurements found"!=e&&""!=e&&""!=e&&null!=e?($(t).parents(".dropdown").children(".dropdown-toggle").text($(t).text()),$.get("/get_measurement/"+e,(function(n,o){$(t).parents("form").find(".entities-table").find("tbody").empty(),n[e].subscription_data.entities.forEach((function(e){$(t).parents("form").find(".entities-table").find("tbody").append('<tr>                            <td><input type="text" class="form-control entity-id" value="'+e.id+'"/></td>                            <td>                                <div class="dropdown entity-id-type">                                    <button class="btn btn-secondary dropdown-toggle id-type-select" data-toggle="dropdown" aria-expanded="false" type="button">'+e.id_type+'</button>                                    <div class="dropdown-menu entity-type-dropdown-menu">                                        <a class="dropdown-item">pattern</a>                                        <a class="dropdown-item">exact</a>                                    </div>                                </div>                            </td>                            <td><input type="text" class="form-control entity-type" value="'+e.type+'"/></td>                            <td>                                <div class="dropdown entity-type-type">                                    <button class="btn btn-secondary dropdown-toggle type-type-select" data-toggle="dropdown" aria-expanded="false" type="button">'+e.type_type+'</button>                                    <div class="dropdown-menu entity-type-dropdown-menu">                                        <a class="dropdown-item">pattern</a>                                        <a class="dropdown-item">exact</a>                                    </div>                                </div>                            </td>                        </tr>')})),$(t).parents("form").find(".tags-table").find("tbody").empty();for(const[o,r]of Object.entries(n[e].influx_data.tags))$(t).parents("form").find(".tags-table").find("tbody").append('<tr>                            <td><input type="text" class="form-control tag-id" value="'+o+'"/></td>                            <td><input type="text" class="form-control entity-property" value="'+r+'"/></td>                        </tr>');$(t).parents("form").find(".fields-table").find("tbody").empty();for(const[o,r]of Object.entries(n[e].influx_data.fields))$(t).parents("form").find(".fields-table").find("tbody").append('<tr>                            <td><input type="text" class="form-control field-id" value="'+o+'"/></td>                            <td><input type="text" class="form-control entity-property" value="'+r+'"/></td>                        </tr>')}))):toastr.warning("Please select valid measurement.")})),$("#delete_measurement_dropdown_menu, #subscribe_measurement_dropdown_menu, #pr_measurement_dropdown_menu, #delete_measurement_dropdown_menu").on("click","a",(function(){"No measurements found"!=$(this).text()&&""!=$(this).text()&&""!=$(this).text().trim()&&null!=$(this).text()?$(this).parents(".dropdown").children(".dropdown-toggle").text($(this).text()):toastr.warning("Please select valid measurement.")})),$("#add_measurement_add_entity, #update_measurement_add_entity").on("click",(function(){$(this).parents(".form-group").find("tbody").append('<tr>            <td><input type="text" class="form-control entity-id" /></td>            <td>                <div class="dropdown entity-id-type">                    <button class="btn btn-secondary dropdown-toggle id-type-select" data-toggle="dropdown" aria-expanded="false" type="button">Dropdown </button>                    <div class="dropdown-menu entity-type-dropdown-menu">                        <a class="dropdown-item">pattern</a>                        <a class="dropdown-item">exact</a>                    </div>                </div>            </td>            <td><input type="text" class="form-control entity-type" /></td>            <td>                <div class="dropdown entity-type-type">                    <button class="btn btn-secondary dropdown-toggle type-type-select" data-toggle="dropdown" aria-expanded="false" type="button">Dropdown </button>                    <div class="dropdown-menu entity-type-dropdown-menu">                        <a class="dropdown-item">pattern</a>                        <a class="dropdown-item">exact</a>                    </div>                </div>            </td>        </tr>')})),$("#add_measurement_remove_entity, #update_measurement_remove_entity").on("click",(function(){$(this).parents(".form-group").find("tbody").children().last().remove()})),$("#add_measurement_add_tag, #update_measurement_add_tag").on("click",(function(){$(this).parents(".form-group").find("tbody").append('<tr>                <td><input type="text" class="form-control tag-id" /></td>                <td><input type="text" class="form-control entity-property" /></td>            </tr>')})),$("#add_measurement_add_field, #update_measurement_add_field").on("click",(function(){$(this).parents(".form-group").find("tbody").append('<tr>                <td><input type="text" class="form-control field-id" /></td>                <td><input type="text" class="form-control entity-property" /></td>            </tr>')})),$("#add_measurement_remove_tag, #update_measurement_remove_tag, #add_measurement_remove_field, #update_measurement_remove_field").on("click",(function(){$(this).parents(".form-group").find("tbody").children().last().remove()})),$(document).on("click",".entity-type-dropdown-menu a",(function(){$(this).parents(".dropdown").children("button").text($(this).text().trim())})),$("#add_measurement_submit").on("click",(function(){var t=$("#add_measurement_name").val().trim(),e={fields:{},tags:{}},n={entities:[]},o=!1;"No measurements found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?($("#add_entities_table > table > tbody").children().each((function(t,e){var r={id:"",id_type:"",type:"",type_type:""};return $(e).children().each((function(t,e){1==$(e).children("input").length?$(e).children("input").hasClass("entity-id")?r.id=$(e).children("input").val():$(e).children("input").hasClass("entity-type")&&(r.type=$(e).children("input").val()):1==$(e).children(".dropdown").length&&($(e).children(".dropdown").hasClass("entity-id-type")?r.id_type=$(e).children(".dropdown").children("button").text():$(e).children(".dropdown").hasClass("entity-type-type")&&(r.type_type=$(e).children(".dropdown").children("button").text()))})),console.log(r),"Dropdown"==r.id_type.trim()||"Dropdown"==r.type_type.trim()?(toastr.warning("Please select valid types for entities."),void(o=!0)):""==r.id.trim()||null==r.id.trim()?(toastr.warning("Please fill in all ID fields."),void(o=!0)):""==r.type.trim()||null==r.type.trim()?(toastr.warning("Please fill in all type fields."),void(o=!0)):void n.entities.push(r)})),o||($("#add_tags_table > table > tbody").children().each((function(t,n){var r=void 0,a=void 0;if($(n).children().each((function(t,e){$(e).children("input").hasClass("tag-id")?r=$(e).children("input").val():$(e).children("input").hasClass("entity-property")&&(a=$(e).children("input").val())})),null==r||null==a||""==r&&""!=a||""!=r&&""==a)return toastr.warning("Please fill in tags."),void(o=!0);""==r||""==a?console.log("Empty tags."):e.tags[r]=a})),console.log(e),o||($("#add_fields_table > table > tbody").children().each((function(t,n){var r=void 0,a=void 0;if($(n).children().each((function(t,e){$(e).children("input").hasClass("field-id")?r=$(e).children("input").val():$(e).children("input").hasClass("entity-property")&&(a=$(e).children("input").val())})),null==r||null==a||""==r&&""!=a||""!=r&&""==a)return toastr.warning("Please fill in fields."),void(o=!0);""==r||""==a?console.log("Empty fields."):e.fields[r]=a})),o||$.post("/add_measurement",JSON.stringify({measurement:t,measurement_data:{influx_data:e,subscription_data:n}}),(function(e,n,o){e.search("added")>-1&&200==o.status?toastr.success("Measurement "+t+" added."):toastr.error("Failed to add "+t+" measurement. Bucket missmatch.")})).fail((function(){toastr.error("Failed to add "+t+" measurement.")}))))):toastr.warning("Measurement id "+t+" is not valid.")})),$("#update_measurement_submit").on("click",(function(){var t=$("#update_measurement_dropdown").text().trim(),e={fields:{},tags:{}},n={entities:[]},o=!1;"No measurements found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?($("#update_entities_table > table > tbody").children().each((function(t,e){var r={id:"",id_type:"",type:"",type_type:""};return $(e).children().each((function(t,e){1==$(e).children("input").length?$(e).children("input").hasClass("entity-id")?r.id=$(e).children("input").val():$(e).children("input").hasClass("entity-type")&&(r.type=$(e).children("input").val()):1==$(e).children(".dropdown").length&&($(e).children(".dropdown").hasClass("entity-id-type")?r.id_type=$(e).children(".dropdown").children("button").text():$(e).children(".dropdown").hasClass("entity-type-type")&&(r.type_type=$(e).children(".dropdown").children("button").text()))})),"Dropdown"==r.id_type.trim()||"Dropdown"==r.type_type.trim()?(toastr.warning("Please select valid types for entities."),void(o=!0)):""==r.id.trim()||null==r.id.trim()?(toastr.warning("Please fill in all ID fields."),void(o=!0)):""==r.type.trim()||null==r.type.trim()?(toastr.warning("Please fill in all type fields."),void(o=!0)):void n.entities.push(r)})),o||($("#update_tags_table > table > tbody").children().each((function(t,n){var r=void 0,a=void 0;if($(n).children().each((function(t,e){$(e).children("input").hasClass("tag-id")?r=$(e).children("input").val():$(e).children("input").hasClass("entity-property")&&(a=$(e).children("input").val())})),null==r||null==a||""==r&&""!=a||""!=r&&""==a)return toastr.warning("Please fill in tags."),void(o=!0);""==r||""==a?console.log("Empty tags."):e.tags[r]=a})),o||($("#update_fields_table > table > tbody").children().each((function(t,n){var r=void 0,a=void 0;if($(n).children().each((function(t,e){$(e).children("input").hasClass("field-id")?r=$(e).children("input").val():$(e).children("input").hasClass("entity-property")&&(a=$(e).children("input").val())})),null==r||null==a||""==r&&""!=a||""!=r&&""==a)return toastr.warning("Please fill in fields."),void(o=!0);""==r||""==a?console.log("Empty fields."):e.fields[r]=a})),o||(console.log({measurement_data:{influx_data:e,subscription_data:n}}),$.post("/update_measurement/"+t,JSON.stringify({measurement_data:{influx_data:e,subscription_data:n}}),(function(e,n,o){e.search("updated")>-1&&200==o.status?toastr.success("Measurement "+t+" updated."):toastr.error("Failed to update "+t+" measurement.")})).fail((function(e,n,o){404==e.status?toastr.error("Measurement "+t+" not found."):toastr.error("Failed to update "+t+" measurement.")})))))):toastr.warning("Measurement id "+t+" is not valid.")})),$("#delete_measurement_submit").on("click",(function(){var t=$("#delete_measurement_dropdown").text().trim();"No measurements found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?$.ajax({url:"/delete_measurement/"+t,type:"DELETE"}).done((function(e,n,o){e.search("deleted")>-1&&200==o.status?toastr.success("Measurement "+t+" deleted."):toastr.error("Failed to delete "+t+" measurement.")})).fail((function(e,n,o){404==e.status?toastr.error("Measurement "+t+" not found."):toastr.error("Failed to delete "+t+" measurement.")})):toastr.warning("Measurement id "+t+" is not valid.")}))})),$(document).ready((function(){$("#get_organization_dropdown, #update_organization_dropdown, #delete_organization_dropdown").on("click",(function(){var t=this;$.get("/get_organizations",(function(e,n){$(t).parent().children(".dropdown-menu").empty(),0==e.length&&$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">No organizations found</a>'),e.forEach((function(e){$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">'+e+"</a>")}))})).fail((function(){toastr.error("Failed to get organizations.")}))})),$(".dropdown-menu.get-organization, .dropdown-menu.update-organization").on("click","a",(function(){var t=this,e=$(t).text().trim();"No organizations found"!=e&&""!=e&&""!=e&&null!=e?($(t).parents(".dropdown").children(".dropdown-toggle").text($(t).text()),$.get("/get_organization/"+e,(function(n,o){$(t).parents("form").children(".buckets").children("input").remove(),$(t).parents("form").children(".buckets").children(".dropdown").remove(),n[e].buckets.forEach((function(e){$(t).parent().hasClass("get-organization")?$(t).parents("form").children(".buckets").append('<input class="form-control" type="text" value="'+e+'" readonly>'):$(t).parent().hasClass("update-organization")&&$(t).parents("form").children(".buckets").append('<div class="dropdown mt-1">                                <button class="btn btn-secondary btn-block dropdown-toggle buckets-dropdown-button" data-toggle="dropdown" aria-expanded="false" type="button">'+e+'</button>                                <div class="dropdown-menu buckets-dropdown-menu">                                </div>                            </div>')}))})).fail((function(t,n,o){404==t.status?toastr.error("Organization "+e+" not found."):toastr.error("Failed to get "+e+" organization.")}))):toastr.warning("Please select valid organization.")})),$(".dropdown-menu.delete-organization").on("click","a",(function(){"No organizations found"!=$(this).text()&&""!=$(this).text()&&""!=$(this).text().trim()&&null!=$(this).text()?$(this).parents(".dropdown").children(".dropdown-toggle").text($(this).text()):toastr.warning("Please select valid organization.")})),$("#add_organization_add, #update_organization_add").on("click",(function(){$(this).parent().parent().append('<div class="dropdown mt-1">                <button class="btn btn-secondary btn-block dropdown-toggle buckets-dropdown-button" data-toggle="dropdown" aria-expanded="false" type="button">Dropdown </button>                <div class="dropdown-menu buckets-dropdown-menu">                </div>            </div>')})),$("#add_organization_remove, #update_organization_remove").on("click",(function(){$(this).parents(".buckets").children(".dropdown").last().remove()})),$(document).on("click",".buckets-dropdown-button",(function(){var t=this;$.get("/get_buckets",(function(e,n){$(t).parent().children(".dropdown-menu").empty(),0==e.length&&$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">No buckets found</a>'),e.forEach((function(e){$(t).parent().children(".dropdown-menu").append('<a class="dropdown-item">'+e+"</a>")}))})).fail((function(t,e,n){toastr.error("Failed to get buckets.")}))})),$(document).on("click",".buckets-dropdown-menu a",(function(){var t=$(this).text().trim();"No buckets found"!=t&&""!=t&&""!=t&&null!=t?$(this).parents(".dropdown").children(".dropdown-toggle").text($(this).text()):toastr.warning("Please create a bucket or select a valid one.")})),$("#add_organization_submit").on("click",(function(){var t=$("#add_organization_name").val().trim(),e={buckets:[]};"No organizations found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?($(this).parents("form").children(".buckets").children(".dropdown").each((function(t,n){var o=$(n).children("button").text().trim();null!=o&&null!=o&&""!=o&&"Dropdown"!=o&&e.buckets.push(o)})),0!=e.buckets.length?$.post("/add_organization",JSON.stringify({organization:t,organization_data:e}),(function(e,n,o){e.search("added")>-1&&200==o.status?toastr.success("Organization "+t+" added."):toastr.error("Failed to add "+t+" organization. Bucket missmatch.")})).fail((function(){toastr.error("Failed to add "+t+" organization.")})):toastr.warning(t+" organization doesn't have any buckets assigned.")):toastr.warning("Organization id not valid.")})),$("#update_organization_submit").on("click",(function(){var t=$("#update_organization_dropdown").text().trim(),e={buckets:[]};"No organizations found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?($(this).parents("form").children(".buckets").children(".dropdown").each((function(t,n){var o=$(n).children("button").text().trim();null!=o&&null!=o&&""!=o&&"Dropdown"!=o&&e.buckets.push(o)})),$.post("/update_organization/"+t,JSON.stringify({organization_data:e}),(function(e,n,o){e.search("updated")>-1&&200==o.status?toastr.success("Organization "+t+" updated."):toastr.error("Failed to update "+t+" organization.")})).fail((function(e,n,o){404==e.status?toastr.error("Organization "+t+" not found."):toastr.error("Failed to update "+t+" organization.")}))):toastr.warning("Organization id not valid.")})),$("#delete_organization_submit").on("click",(function(){var t=$("#delete_organization_dropdown").text().trim();"No organizations found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?$.ajax({url:"/delete_organization/"+t,type:"DELETE"}).done((function(e,n,o){e.search("deleted")>-1&&200==o.status?toastr.success("Organization "+t+" deleted."):toastr.error("Failed to delete "+t+" organization.")})).fail((function(e,n,o){404==e.status?toastr.error("Organization "+t+" not found."):toastr.error("Failed to delete "+t+" organization.")})):toastr.warning("Organization id not valid.")}))})),$(document).ready((function(){$("#show_subscription_dropdown_menu").on("click","a",(function(){var t=$(this).text().trim();"No measurements found"!=t&&""!=t&&""!=t&&null!=t?($(this).parents(".dropdown").children(".dropdown-toggle").text($(this).text()),$.get("/get_measurement_subscription/"+t,(function(t,e){$("#subscriptions").empty(),t.forEach(t=>{$("#subscriptions").append("<pre>"+JSON.stringify(t,null,4)+"</pre>")}),0!=t.length||toastr.error("Measurement doesn't have any subscriptions.")})).fail((function(e,n,o){if($("#subscriptions").empty(),e.responseJSON)if("object"==typeof e.responseJSON.detail&&null!==e.responseJSON.detail)for(const[t,n]of Object.entries(e.responseJSON.detail))toastr.error(n);else toastr.error(e.responseJSON.detail);else console.error(e.status,statusText,e.response);toastr.error("Failed to get "+t+" measurement subscriptions.")}))):toastr.warning("Please select valid measurement.")})),$("#subscription_submit").on("click",(function(){var t=$("#subscribe_measurement_dropdown_button").text().trim();"No measurements found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?$.post("/subscribe_to_measurement/"+t,(function(t){toastr.success(t)})).fail((function(e,n,o){if(e.responseJSON)if("object"==typeof e.responseJSON.detail&&null!==e.responseJSON.detail)for(const[t,n]of Object.entries(e.responseJSON.detail))toastr.error(n);else toastr.error(e.responseJSON.detail);else console.error(e.status,n,e.response);toastr.error("Failed to subscribe to "+t+" measurement.")})):toastr.warning("Measurement id "+t+" is not valid.")})),$("#resume_measurement_subscription_submit").on("click",(function(){var t=$("#pr_measurement_dropdown").text().trim();"No measurements found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?$.ajax({url:"/resume_measurement_subscription/"+t,type:"PATCH"}).done((function(e,n,o){e.search("resumed")>-1&&200==o.status?toastr.success("Measurement "+t+" subscription resumed."):(console.info(o.status,n,e),toastr.warning(e))})).fail((function(e,n,o){if(e.responseJSON)if("object"==typeof e.responseJSON.detail&&null!==e.responseJSON.detail)for(const[t,n]of Object.entries(e.responseJSON.detail))toastr.error(n);else toastr.error(e.responseJSON.detail);else console.error(e.status,n,e.response);toastr.error("Failed to resume "+t+" measurement subscription.")})):toastr.warning("Measurement id "+t+" is not valid.")})),$("#pause_measurement_subscription_submit").on("click",(function(){var t=$("#pr_measurement_dropdown").text().trim();"No measurements found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?$.ajax({url:"/pause_measurement_subscription/"+t,type:"PATCH"}).done((function(e,n,o){e.search("paused")>-1&&200==o.status?toastr.success("Measurement "+t+" subscription paused."):(console.info(o.status,n,e),toastr.warning(e))})).fail((function(e,n,o){if(e.responseJSON)if("object"==typeof e.responseJSON.detail&&null!==e.responseJSON.detail)for(const[t,n]of Object.entries(e.responseJSON.detail))toastr.error(n);else toastr.error(e.responseJSON.detail);else console.error(e.status,n,e.response);toastr.error("Failed to pause "+t+" measurement subscription.")})):toastr.warning("Measurement id "+t+" is not valid.")})),$("#delete_measurement_subscription_submit").on("click",(function(){var t=$("#delete_measurement_dropdown").text().trim();"No measurements found"!=t&&""!=t&&""!=t.trim()&&null!=t&&"Dropdown"!=t?$.ajax({url:"/delete_measurement_subscription/"+t,type:"DELETE"}).done((function(e,n,o){e.search("deleted")>-1&&200==o.status?toastr.success("Measurement "+t+" subscription deleted."):(console.info(o.status,n,e),toastr.warning(e))})).fail((function(e,n,o){if(e.responseJSON)if("object"==typeof e.responseJSON.detail&&null!==e.responseJSON.detail)for(const[t,n]of Object.entries(e.responseJSON.detail))toastr.error(n);else toastr.error(e.responseJSON.detail);else console.error(e.status,n,e.response);toastr.error("Failed to delete "+t+" measurement subscription.")})):toastr.warning("Measurement id "+t+" is not valid.")}))})),function(t){"use strict";t("#sidebarToggle, #sidebarToggleTop").on("click",(function(e){t("body").toggleClass("sidebar-toggled"),t(".sidebar").toggleClass("toggled"),t(".sidebar").hasClass("toggled")&&t(".sidebar .collapse").collapse("hide")})),t(window).resize((function(){t(window).width()<768&&t(".sidebar .collapse").collapse("hide")})),t("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel",(function(e){if(t(window).width()>768){var n=e.originalEvent,o=n.wheelDelta||-n.detail;this.scrollTop+=30*(o<0?1:-1),e.preventDefault()}})),t(document).on("scroll",(function(){t(this).scrollTop()>100?t(".scroll-to-top").fadeIn():t(".scroll-to-top").fadeOut()})),t(document).on("click","a.scroll-to-top",(function(e){var n=t(this);t("html, body").stop().animate({scrollTop:t(n.attr("href")).offset().top},1e3,"easeInOutExpo"),e.preventDefault()}))}(jQuery);